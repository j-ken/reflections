What happens when you initialize a repository? Why do you 
need to do it?
---
I need this to make git aware that I want to track this folder
location with all the files contained in it.

----------

How is the staging area different from the working directory 
and the repository? What value do you think it offers?
---
the staging area is a temporary buffer memory. it contains 
files we added with git add, but aren't yet committed.
the working directory is where our current files are saved, 
all changes made to the files are seen here. the repository
will mirror the changes made in the working directory, but only
if we tell it to do so via git commit.
so the order in actuality of the three concepts would be
1. working directory (contains all files up to date)
2. staging area (when we add files they are here)
3. repository (when we commit changes, they will be here)

----------

How can you use the staging area to make sure you have one 
commit per logical change?
---
with the git diff --staged i can make sure i only added on
logical change to the staging area. if so, i can add that 
change with git commit and then proceed the same way with
the next logical change.

----------

What are some situations when branches would be helpful in 
keeping your history organized? How would branches help?
---
If I want to try out a new feature, I can explore this on 
a branch without changing the master and having to revert 
to very old commits in case the experiment dind't work.

----------

How do the diagrams help you visualize the branch structure?
---
Because they show the history and the parents of all branches,
which Terminal can't do as well.

----------

What is the result of merging two branches together? 
Why do we represent it in the diagram the way we do?
---
Merging new features into the master branch.

----------

What are the pros and cons of Gitâ€™s automatic merging vs. 
always doing merges manually?
---
probably in most cases git automatic merging will do the 
correct thing and merge in a way that makes sens. so it
saves us time.
on the other hand we don't have control over what git did.
so manual merging is probably safer.